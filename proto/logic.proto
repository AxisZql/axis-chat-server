syntax = "proto3";

import "google/protobuf/empty.proto";
option go_package = "./;proto";

/**
*Author: AxisZql
*Date: 2022-5-31
*DESC: logic layer rpc interface define（逻辑层rpc接口定义）
 */

service Logic{
  rpc Connect(ConnectRequest) returns(ConnectReply); // 用户连接服务
  rpc DisConnect(DisConnectRequest) returns(google.protobuf.Empty); // 用户断开服务
  //==========以上两个方法是给connect层进行调用，以下方法则是给API层来调用的

  rpc Register(RegisterRequest) returns(RegisterReply);// 新用户注册
  rpc Login(LoginRequest) returns(LoginReply);//登陆
  rpc AfterLogin(AfterLoginReq) returns(AfterLoginReply);// 用户成功登陆后获取所有初始聊天记录和所有用户身份信息
  rpc LoginOut(LoginOutRequest) returns(google.protobuf.Empty);//登出
  rpc GetUserInfoByAccessToken(GetUserInfoByAccessTokenRequest) returns(GetUserInfoByAccessTokenReply);//通过凭证换取用户信息
  rpc GetUserInfoByUserid(GetUserInfoByUseridRequest) returns(GetUserInfoByUseridReply);//通过userid换取用户信息
  rpc UpdateUserInfo(UpdateUserInfoRequest) returns(UpdateUserInfoReply);//更新用户信息
  rpc UpdatePassword(UpdatePasswordRequest) returns(google.protobuf.Empty);//更新用户密码
  rpc SearchUser(SearchUserRequest) returns(SearchUserReply);//根据用户名搜索用户
  rpc SearchGroup(SearchGroupRequest) returns(SearchGroupReply);//根据群名搜索群聊
  rpc GetGroupMsgByPage(GetGroupMsgByPageRequest) returns(GetGroupMsgByPageReply);//分页获取群聊消息
  rpc GetFriendMsgByPage(GetFriendMsgByPageRequest) returns(GetFriendMsgByPageReply);//分页获取私聊消息
  rpc CreateGroup(Group) returns(Group);//创建群聊
  rpc AddGroup(AddGroupRequest) returns(google.protobuf.Empty);//加入群聊
  rpc AddFriend(AddFriendRequest) returns(google.protobuf.Empty);//添加好友
  rpc Push(PushRequest) returns(google.protobuf.Empty);//私聊消息推送
  rpc PushRoom(PushRoomRequest) returns(google.protobuf.Empty);//群聊消息推送
  rpc PushRoomCount(PushRoomCountRequest) returns(google.protobuf.Empty);//推送群聊在线人数消息
  rpc PushRoomInfo(PushRoomInfoRequest) returns(google.protobuf.Empty);//推送群聊信息消息
}

message ConnectRequest{
  string accessToken = 1; // 用户登陆后获取的生成的唯一有效凭证
  string serverId = 2; // 当前用户在connect层连接的服务实例id
}

message ConnectReply{
  int64 userid = 1;
}

message DisConnectRequest{
  int64 userid = 1;
}

message RegisterRequest{
  string username = 1;
  string password = 2;
}

message RegisterReply{
  int32 code = 1;
  string accessToken = 2;
  int64  userid = 3;
}

message LoginRequest{
  string username = 1;
  string password = 2;
}

message LoginReply{
  int32  code = 1;
  string accessToken = 2;
}

message AfterLoginReq{
  int64 userid = 1;
}

message FriendData {
  // @inject_tag: json:"userid"
  int64 userid = 1;
  // @inject_tag: json:"username"
  string username = 2;
  // @inject_tag: json:"tag"
  string tag = 3;
  // @inject_tag: json:"role"
  int32 role = 4;
  // @inject_tag: json:"status"
  int32 status = 5;
  // @inject_tag: json:"avatar"
  string avatar = 6;
  // @inject_tag: json:"createAt"
  string createAt = 7;
  // @inject_tag: json:"messages"
  repeated ChatMessage messages = 8;
}

message GroupData {
  // @inject_tag: json:"groupId"
  int64 groupId = 1;
  // @inject_tag: json:"groupName"
  string groupName = 2;
  // @inject_tag: json:"notice"
  string notice = 3;
  // @inject_tag: json:"userid"
  int64 userid = 4;
  // @inject_tag: json:"messages"
  repeated ChatMessage messages = 5;
  // @inject_tag: json:"createAt"
  string createAt = 6;
}

message UserData {
  // @inject_tag: json:"userid"
  int64 userid = 1;
  // @inject_tag: json:"role"
  int32 role = 2;
  // @inject_tag: json:"status"
  int32 status = 3;
  // @inject_tag: json:"tag"
  string tag = 4;
  // @inject_tag: json:"username"
  string username = 5;
  // @inject_tag: json:"createAt"
  string createAt = 6;
  // @inject_tag: json:"avatar"
  string avatar = 7;
}

message AfterLoginReply{
  // @inject_tag: json:"friendData"
  repeated FriendData friendData = 1;
  // @inject_tag: json:"groupData"
  repeated GroupData groupData = 2;
  // @inject_tag: json:"userData"
  repeated UserData userData = 3;
}

message LoginOutRequest {
  string accessToken = 1;
}

message GetUserInfoByAccessTokenRequest{
  string accessToken = 1;
}

message User {
  // @inject_tag: json:"id"
  int64 id = 1;
  // @inject_tag: json:"username"
  string username = 2;
  // @inject_tag: json:"avatar"
  string avatar = 3;
  // @inject_tag: json:"role"
  int32 role = 4;
  // @inject_tag: json:"status"
  int32 status = 5;
  // @inject_tag: json:"tag"
  string tag = 6;
  // @inject_tag: json:"createAt"
  string createAt = 7;
  // @inject_tag: json:"updateAt"
  string updateAt = 8;
}

message GetUserInfoByAccessTokenReply{
  int32 code = 1;
  User user = 2;
}

message GetUserInfoByUseridRequest {
  int64 userid = 1;
}

message GetUserInfoByUseridReply{
  int32 code = 1;
  User user = 2;
}

message UpdateUserInfoRequest{
  User user = 1;
}

message UpdateUserInfoReply{
  int32 code = 1;
  User user = 2;
}

message UpdatePasswordRequest{
  int64 userid = 1;
  string oldPassword = 2;
  string newPassword1 = 3;
  string newPassword2 = 4;
}

message SearchUserRequest{
  string username = 1;
}

message SearchUserReply{
  repeated User userList = 1;
}

message Group {
  // @inject_tag: json:"id"
  int64 id = 1;
  // @inject_tag: json:"userid"
  int64 userid = 2;
  // @inject_tag: json:"groupName"
  string groupName = 3;
  // @inject_tag: json:"notice"
  string notice = 4;
  // @inject_tag: json:"createAt"
  string  createAt = 5;
  // @inject_tag: json:"updateAt"
  string updateAt = 6;
}

message SearchGroupRequest{
  string groupName = 1;
}

message SearchGroupReply{
  repeated Group groupList = 1;
}

message ChatMessage {
  int64 id = 1;
  int64 userid = 2;
  int64 groupId = 3;
  int64 friendId = 4;
  string content = 5;
  string messageType = 6;
  string createAt = 7;
  string fromUsername = 8;
  string friendName = 9;
  string groupName = 10;
  // @inject_tag: json:"avatar"
  string avatar = 11;
  // @inject_tag: json:"snowId"
  string snowId = 12;
  int64 watermark = 13;//消息水印 时间戳格式
}

message GetGroupMsgByPageRequest {
  int64 groupId = 1;
  int64 current = 3;
  int64 pageSize = 4;
}

message GetGroupMsgByPageReply{
  int32 code = 1;
  // @inject_tag: json:"messageArr"
  repeated ChatMessage messageArr = 2;
  // @inject_tag: json:"userArr"
  repeated User userArr = 3;
}

message GetFriendMsgByPageRequest{
  int64 friendId = 1;
  int64 userid = 2;
  int64 current = 3;
  int64 pageSize = 4;
}

message GetFriendMsgByPageReply{
  int32 code = 1;
  repeated ChatMessage messageArr = 2;
}

message AddGroupRequest{
  int64 userid = 1;
  int64 groupId = 2;
}

message AddFriendRequest{
  int64 userid = 1;
  int64 friendId = 2;
}

message PushRequest{
  ChatMessage msg = 1;
}

message PushRoomRequest{
  ChatMessage msg = 1;
}

message PushRoomCountRequest{
  int64 groupId = 1;
}

message PushRoomInfoRequest{
  int64 groupId = 1;
}