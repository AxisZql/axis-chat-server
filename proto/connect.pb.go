// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.4
// source: connect.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 推送过来的消息包括对应消息的topic名称，partition、offset（提交消息确认时offset+1）
type KafkaMsgInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Topic          string                 `protobuf:"bytes,1,opt,name=topic,proto3" json:"topic,omitempty"`
	Partition      int32                  `protobuf:"varint,2,opt,name=partition,proto3" json:"partition,omitempty"`
	Offset         int64                  `protobuf:"varint,3,opt,name=offset,proto3" json:"offset,omitempty"`
	High_WaterMark int64                  `protobuf:"varint,4,opt,name=high_Water_mark,json=highWaterMark,proto3" json:"high_Water_mark,omitempty"`
	Key            []byte                 `protobuf:"bytes,5,opt,name=key,proto3" json:"key,omitempty"`
	Value          []byte                 `protobuf:"bytes,6,opt,name=value,proto3" json:"value,omitempty"`
	Headers        []*KafkaMsgInfo_Header `protobuf:"bytes,7,rep,name=headers,proto3" json:"headers,omitempty"`
	Time           string                 `protobuf:"bytes,8,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *KafkaMsgInfo) Reset() {
	*x = KafkaMsgInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaMsgInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaMsgInfo) ProtoMessage() {}

func (x *KafkaMsgInfo) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaMsgInfo.ProtoReflect.Descriptor instead.
func (*KafkaMsgInfo) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{0}
}

func (x *KafkaMsgInfo) GetTopic() string {
	if x != nil {
		return x.Topic
	}
	return ""
}

func (x *KafkaMsgInfo) GetPartition() int32 {
	if x != nil {
		return x.Partition
	}
	return 0
}

func (x *KafkaMsgInfo) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *KafkaMsgInfo) GetHigh_WaterMark() int64 {
	if x != nil {
		return x.High_WaterMark
	}
	return 0
}

func (x *KafkaMsgInfo) GetKey() []byte {
	if x != nil {
		return x.Key
	}
	return nil
}

func (x *KafkaMsgInfo) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

func (x *KafkaMsgInfo) GetHeaders() []*KafkaMsgInfo_Header {
	if x != nil {
		return x.Headers
	}
	return nil
}

func (x *KafkaMsgInfo) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type PushGroupInfoMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg       *PushGroupInfoMsgReq_Msg `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	KafkaInfo *KafkaMsgInfo            `protobuf:"bytes,2,opt,name=kafkaInfo,proto3" json:"kafkaInfo,omitempty"`
}

func (x *PushGroupInfoMsgReq) Reset() {
	*x = PushGroupInfoMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushGroupInfoMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushGroupInfoMsgReq) ProtoMessage() {}

func (x *PushGroupInfoMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushGroupInfoMsgReq.ProtoReflect.Descriptor instead.
func (*PushGroupInfoMsgReq) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{1}
}

func (x *PushGroupInfoMsgReq) GetMsg() *PushGroupInfoMsgReq_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *PushGroupInfoMsgReq) GetKafkaInfo() *KafkaMsgInfo {
	if x != nil {
		return x.KafkaInfo
	}
	return nil
}

type PushGroupCountMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg       *PushGroupCountMsgReq_Msg `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	KafkaInfo *KafkaMsgInfo             `protobuf:"bytes,2,opt,name=kafkaInfo,proto3" json:"kafkaInfo,omitempty"`
}

func (x *PushGroupCountMsgReq) Reset() {
	*x = PushGroupCountMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushGroupCountMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushGroupCountMsgReq) ProtoMessage() {}

func (x *PushGroupCountMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushGroupCountMsgReq.ProtoReflect.Descriptor instead.
func (*PushGroupCountMsgReq) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{2}
}

func (x *PushGroupCountMsgReq) GetMsg() *PushGroupCountMsgReq_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *PushGroupCountMsgReq) GetKafkaInfo() *KafkaMsgInfo {
	if x != nil {
		return x.KafkaInfo
	}
	return nil
}

type PushFriendOnlineMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg       *PushFriendOnlineMsgReq_Msg `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	KafkaInfo *KafkaMsgInfo               `protobuf:"bytes,2,opt,name=kafkaInfo,proto3" json:"kafkaInfo,omitempty"`
}

func (x *PushFriendOnlineMsgReq) Reset() {
	*x = PushFriendOnlineMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushFriendOnlineMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushFriendOnlineMsgReq) ProtoMessage() {}

func (x *PushFriendOnlineMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushFriendOnlineMsgReq.ProtoReflect.Descriptor instead.
func (*PushFriendOnlineMsgReq) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{3}
}

func (x *PushFriendOnlineMsgReq) GetMsg() *PushFriendOnlineMsgReq_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *PushFriendOnlineMsgReq) GetKafkaInfo() *KafkaMsgInfo {
	if x != nil {
		return x.KafkaInfo
	}
	return nil
}

type PushFriendOfflineMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg       *PushFriendOfflineMsgReq_Msg `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	KafkaInfo *KafkaMsgInfo                `protobuf:"bytes,2,opt,name=kafkaInfo,proto3" json:"kafkaInfo,omitempty"`
}

func (x *PushFriendOfflineMsgReq) Reset() {
	*x = PushFriendOfflineMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushFriendOfflineMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushFriendOfflineMsgReq) ProtoMessage() {}

func (x *PushFriendOfflineMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushFriendOfflineMsgReq.ProtoReflect.Descriptor instead.
func (*PushFriendOfflineMsgReq) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{4}
}

func (x *PushFriendOfflineMsgReq) GetMsg() *PushFriendOfflineMsgReq_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *PushFriendOfflineMsgReq) GetKafkaInfo() *KafkaMsgInfo {
	if x != nil {
		return x.KafkaInfo
	}
	return nil
}

type PushGroupMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg       *PushGroupMsgReq_Msg `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	KafkaInfo *KafkaMsgInfo        `protobuf:"bytes,2,opt,name=kafkaInfo,proto3" json:"kafkaInfo,omitempty"`
}

func (x *PushGroupMsgReq) Reset() {
	*x = PushGroupMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushGroupMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushGroupMsgReq) ProtoMessage() {}

func (x *PushGroupMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushGroupMsgReq.ProtoReflect.Descriptor instead.
func (*PushGroupMsgReq) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{5}
}

func (x *PushGroupMsgReq) GetMsg() *PushGroupMsgReq_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *PushGroupMsgReq) GetKafkaInfo() *KafkaMsgInfo {
	if x != nil {
		return x.KafkaInfo
	}
	return nil
}

type PushFriendMsgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Msg       *PushFriendMsgReq_Msg `protobuf:"bytes,1,opt,name=msg,proto3" json:"msg,omitempty"`
	KafkaInfo *KafkaMsgInfo         `protobuf:"bytes,2,opt,name=kafkaInfo,proto3" json:"kafkaInfo,omitempty"`
}

func (x *PushFriendMsgReq) Reset() {
	*x = PushFriendMsgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushFriendMsgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushFriendMsgReq) ProtoMessage() {}

func (x *PushFriendMsgReq) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushFriendMsgReq.ProtoReflect.Descriptor instead.
func (*PushFriendMsgReq) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{6}
}

func (x *PushFriendMsgReq) GetMsg() *PushFriendMsgReq_Msg {
	if x != nil {
		return x.Msg
	}
	return nil
}

func (x *PushFriendMsgReq) GetKafkaInfo() *KafkaMsgInfo {
	if x != nil {
		return x.KafkaInfo
	}
	return nil
}

type KafkaMsgInfo_Header struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value []byte `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *KafkaMsgInfo_Header) Reset() {
	*x = KafkaMsgInfo_Header{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KafkaMsgInfo_Header) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KafkaMsgInfo_Header) ProtoMessage() {}

func (x *KafkaMsgInfo_Header) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KafkaMsgInfo_Header.ProtoReflect.Descriptor instead.
func (*KafkaMsgInfo_Header) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{0, 0}
}

func (x *KafkaMsgInfo_Header) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *KafkaMsgInfo_Header) GetValue() []byte {
	if x != nil {
		return x.Value
	}
	return nil
}

type PushGroupInfoMsgReq_Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId int64   `protobuf:"varint,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Count   int32   `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	UserArr []*User `protobuf:"bytes,3,rep,name=userArr,proto3" json:"userArr,omitempty"` // 群成员列表
	Op      int32   `protobuf:"varint,4,opt,name=op,proto3" json:"op,omitempty"`
	// @inject_tag: json:"onlineUserIds"
	OnlineUserIds []int64 `protobuf:"varint,5,rep,packed,name=onlineUserIds,proto3" json:"onlineUserIds"`
}

func (x *PushGroupInfoMsgReq_Msg) Reset() {
	*x = PushGroupInfoMsgReq_Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushGroupInfoMsgReq_Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushGroupInfoMsgReq_Msg) ProtoMessage() {}

func (x *PushGroupInfoMsgReq_Msg) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushGroupInfoMsgReq_Msg.ProtoReflect.Descriptor instead.
func (*PushGroupInfoMsgReq_Msg) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{1, 0}
}

func (x *PushGroupInfoMsgReq_Msg) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *PushGroupInfoMsgReq_Msg) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PushGroupInfoMsgReq_Msg) GetUserArr() []*User {
	if x != nil {
		return x.UserArr
	}
	return nil
}

func (x *PushGroupInfoMsgReq_Msg) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *PushGroupInfoMsgReq_Msg) GetOnlineUserIds() []int64 {
	if x != nil {
		return x.OnlineUserIds
	}
	return nil
}

type PushGroupCountMsgReq_Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	GroupId int64 `protobuf:"varint,1,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Count   int32 `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Op      int32 `protobuf:"varint,3,opt,name=op,proto3" json:"op,omitempty"`
}

func (x *PushGroupCountMsgReq_Msg) Reset() {
	*x = PushGroupCountMsgReq_Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushGroupCountMsgReq_Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushGroupCountMsgReq_Msg) ProtoMessage() {}

func (x *PushGroupCountMsgReq_Msg) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushGroupCountMsgReq_Msg.ProtoReflect.Descriptor instead.
func (*PushGroupCountMsgReq_Msg) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{2, 0}
}

func (x *PushGroupCountMsgReq_Msg) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *PushGroupCountMsgReq_Msg) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PushGroupCountMsgReq_Msg) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

type PushFriendOnlineMsgReq_Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendId   int64  `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"` //上线方id
	FriendName string `protobuf:"bytes,2,opt,name=friendName,proto3" json:"friendName,omitempty"`
	Op         int32  `protobuf:"varint,3,opt,name=op,proto3" json:"op,omitempty"`
	Belong     int64  `protobuf:"varint,4,opt,name=belong,proto3" json:"belong,omitempty"` // 消息接收方id
}

func (x *PushFriendOnlineMsgReq_Msg) Reset() {
	*x = PushFriendOnlineMsgReq_Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushFriendOnlineMsgReq_Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushFriendOnlineMsgReq_Msg) ProtoMessage() {}

func (x *PushFriendOnlineMsgReq_Msg) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushFriendOnlineMsgReq_Msg.ProtoReflect.Descriptor instead.
func (*PushFriendOnlineMsgReq_Msg) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{3, 0}
}

func (x *PushFriendOnlineMsgReq_Msg) GetFriendId() int64 {
	if x != nil {
		return x.FriendId
	}
	return 0
}

func (x *PushFriendOnlineMsgReq_Msg) GetFriendName() string {
	if x != nil {
		return x.FriendName
	}
	return ""
}

func (x *PushFriendOnlineMsgReq_Msg) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *PushFriendOnlineMsgReq_Msg) GetBelong() int64 {
	if x != nil {
		return x.Belong
	}
	return 0
}

type PushFriendOfflineMsgReq_Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FriendId int64 `protobuf:"varint,1,opt,name=friendId,proto3" json:"friendId,omitempty"`
	Op       int32 `protobuf:"varint,2,opt,name=op,proto3" json:"op,omitempty"`
	Belong   int64 `protobuf:"varint,3,opt,name=belong,proto3" json:"belong,omitempty"` //消息接收方id
}

func (x *PushFriendOfflineMsgReq_Msg) Reset() {
	*x = PushFriendOfflineMsgReq_Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushFriendOfflineMsgReq_Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushFriendOfflineMsgReq_Msg) ProtoMessage() {}

func (x *PushFriendOfflineMsgReq_Msg) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushFriendOfflineMsgReq_Msg.ProtoReflect.Descriptor instead.
func (*PushFriendOfflineMsgReq_Msg) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{4, 0}
}

func (x *PushFriendOfflineMsgReq_Msg) GetFriendId() int64 {
	if x != nil {
		return x.FriendId
	}
	return 0
}

func (x *PushFriendOfflineMsgReq_Msg) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *PushFriendOfflineMsgReq_Msg) GetBelong() int64 {
	if x != nil {
		return x.Belong
	}
	return 0
}

type PushGroupMsgReq_Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid       int64  `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	GroupId      int64  `protobuf:"varint,2,opt,name=groupId,proto3" json:"groupId,omitempty"`
	Content      string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	MessageType  string `protobuf:"bytes,4,opt,name=messageType,proto3" json:"messageType,omitempty"`
	GroupName    string `protobuf:"bytes,5,opt,name=groupName,proto3" json:"groupName,omitempty"`
	FromUsername string `protobuf:"bytes,6,opt,name=fromUsername,proto3" json:"fromUsername,omitempty"`
	CreateAt     string `protobuf:"bytes,7,opt,name=createAt,proto3" json:"createAt,omitempty"`
	Op           int32  `protobuf:"varint,8,opt,name=op,proto3" json:"op,omitempty"`
	SnowId       string `protobuf:"bytes,9,opt,name=snowId,proto3" json:"snowId,omitempty"`
	Avatar       string `protobuf:"bytes,10,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Belong       int64  `protobuf:"varint,11,opt,name=belong,proto3" json:"belong,omitempty"`
}

func (x *PushGroupMsgReq_Msg) Reset() {
	*x = PushGroupMsgReq_Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushGroupMsgReq_Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushGroupMsgReq_Msg) ProtoMessage() {}

func (x *PushGroupMsgReq_Msg) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushGroupMsgReq_Msg.ProtoReflect.Descriptor instead.
func (*PushGroupMsgReq_Msg) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{5, 0}
}

func (x *PushGroupMsgReq_Msg) GetUserid() int64 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *PushGroupMsgReq_Msg) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *PushGroupMsgReq_Msg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PushGroupMsgReq_Msg) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *PushGroupMsgReq_Msg) GetGroupName() string {
	if x != nil {
		return x.GroupName
	}
	return ""
}

func (x *PushGroupMsgReq_Msg) GetFromUsername() string {
	if x != nil {
		return x.FromUsername
	}
	return ""
}

func (x *PushGroupMsgReq_Msg) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *PushGroupMsgReq_Msg) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *PushGroupMsgReq_Msg) GetSnowId() string {
	if x != nil {
		return x.SnowId
	}
	return ""
}

func (x *PushGroupMsgReq_Msg) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PushGroupMsgReq_Msg) GetBelong() int64 {
	if x != nil {
		return x.Belong
	}
	return 0
}

type PushFriendMsgReq_Msg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Userid       int64  `protobuf:"varint,1,opt,name=userid,proto3" json:"userid,omitempty"`
	FriendId     int64  `protobuf:"varint,2,opt,name=friendId,proto3" json:"friendId,omitempty"`
	Content      string `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	MessageType  string `protobuf:"bytes,4,opt,name=messageType,proto3" json:"messageType,omitempty"`
	FriendName   string `protobuf:"bytes,5,opt,name=friendName,proto3" json:"friendName,omitempty"`
	FromUsername string `protobuf:"bytes,6,opt,name=fromUsername,proto3" json:"fromUsername,omitempty"`
	CreateAt     string `protobuf:"bytes,7,opt,name=createAt,proto3" json:"createAt,omitempty"`
	Op           int32  `protobuf:"varint,8,opt,name=op,proto3" json:"op,omitempty"`
	SnowId       string `protobuf:"bytes,9,opt,name=snowId,proto3" json:"snowId,omitempty"`
	Avatar       string `protobuf:"bytes,10,opt,name=avatar,proto3" json:"avatar,omitempty"`
	Belong       int64  `protobuf:"varint,11,opt,name=belong,proto3" json:"belong,omitempty"` // 该条消息的所属于的信箱
}

func (x *PushFriendMsgReq_Msg) Reset() {
	*x = PushFriendMsgReq_Msg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_connect_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PushFriendMsgReq_Msg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PushFriendMsgReq_Msg) ProtoMessage() {}

func (x *PushFriendMsgReq_Msg) ProtoReflect() protoreflect.Message {
	mi := &file_connect_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PushFriendMsgReq_Msg.ProtoReflect.Descriptor instead.
func (*PushFriendMsgReq_Msg) Descriptor() ([]byte, []int) {
	return file_connect_proto_rawDescGZIP(), []int{6, 0}
}

func (x *PushFriendMsgReq_Msg) GetUserid() int64 {
	if x != nil {
		return x.Userid
	}
	return 0
}

func (x *PushFriendMsgReq_Msg) GetFriendId() int64 {
	if x != nil {
		return x.FriendId
	}
	return 0
}

func (x *PushFriendMsgReq_Msg) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PushFriendMsgReq_Msg) GetMessageType() string {
	if x != nil {
		return x.MessageType
	}
	return ""
}

func (x *PushFriendMsgReq_Msg) GetFriendName() string {
	if x != nil {
		return x.FriendName
	}
	return ""
}

func (x *PushFriendMsgReq_Msg) GetFromUsername() string {
	if x != nil {
		return x.FromUsername
	}
	return ""
}

func (x *PushFriendMsgReq_Msg) GetCreateAt() string {
	if x != nil {
		return x.CreateAt
	}
	return ""
}

func (x *PushFriendMsgReq_Msg) GetOp() int32 {
	if x != nil {
		return x.Op
	}
	return 0
}

func (x *PushFriendMsgReq_Msg) GetSnowId() string {
	if x != nil {
		return x.SnowId
	}
	return ""
}

func (x *PushFriendMsgReq_Msg) GetAvatar() string {
	if x != nil {
		return x.Avatar
	}
	return ""
}

func (x *PushFriendMsgReq_Msg) GetBelong() int64 {
	if x != nil {
		return x.Belong
	}
	return 0
}

var File_connect_proto protoreflect.FileDescriptor

var file_connect_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a,
	0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0b, 0x6c, 0x6f,
	0x67, 0x69, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa0, 0x02, 0x0a, 0x0c, 0x6b, 0x61,
	0x66, 0x6b, 0x61, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f,
	0x70, 0x69, 0x63, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x70, 0x69, 0x63,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x70, 0x61, 0x72, 0x74, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16,
	0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x68, 0x69, 0x67, 0x68, 0x5f, 0x57,
	0x61, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0d, 0x68, 0x69, 0x67, 0x68, 0x57, 0x61, 0x74, 0x65, 0x72, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x2e, 0x0a, 0x07, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x4d,
	0x73, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x52, 0x07, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x1a, 0x30, 0x0a, 0x06, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xfd, 0x01, 0x0a,
	0x13, 0x50, 0x75, 0x73, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x2b, 0x0a, 0x09, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x4d, 0x73, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x8c, 0x01,
	0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x41, 0x72, 0x72,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x41, 0x72, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x24, 0x0a, 0x0d, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0d, 0x6f,
	0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0xb7, 0x01, 0x0a,
	0x14, 0x50, 0x75, 0x73, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d,
	0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x2b, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x2b, 0x0a, 0x09, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x4d, 0x73, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x45, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x6f, 0x70, 0x22, 0xdf, 0x01, 0x0a, 0x16, 0x50, 0x75, 0x73, 0x68, 0x46,
	0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65,
	0x71, 0x12, 0x2d, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b,
	0x2e, 0x50, 0x75, 0x73, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e,
	0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x6d, 0x73, 0x67,
	0x12, 0x2b, 0x0a, 0x09, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x4d, 0x73, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x09, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x69, 0x0a,
	0x03, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6f, 0x70,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x22, 0xc1, 0x01, 0x0a, 0x17, 0x50, 0x75, 0x73,
	0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73,
	0x67, 0x52, 0x65, 0x71, 0x12, 0x2e, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x66,
	0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x2e, 0x4d, 0x73, 0x67, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x12, 0x2b, 0x0a, 0x09, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x4d,
	0x73, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x49, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x66, 0x72, 0x69, 0x65,
	0x6e, 0x64, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x6f, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x22, 0x92, 0x03, 0x0a,
	0x0f, 0x50, 0x75, 0x73, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71,
	0x12, 0x26, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e,
	0x50, 0x75, 0x73, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x2e,
	0x4d, 0x73, 0x67, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x2b, 0x0a, 0x09, 0x6b, 0x61, 0x66, 0x6b,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x61,
	0x66, 0x6b, 0x61, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x6b, 0x61, 0x66, 0x6b,
	0x61, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xa9, 0x02, 0x0a, 0x03, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x67,
	0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x67, 0x72, 0x6f, 0x75, 0x70, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x6f,
	0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6f, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6e, 0x6f,
	0x77, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6e, 0x6f, 0x77, 0x49,
	0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x6c,
	0x6f, 0x6e, 0x67, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x65, 0x6c, 0x6f, 0x6e,
	0x67, 0x22, 0x98, 0x03, 0x0a, 0x10, 0x50, 0x75, 0x73, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x12, 0x27, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x2e, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x2b, 0x0a, 0x09, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x4d, 0x73, 0x67, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x09, 0x6b, 0x61, 0x66, 0x6b, 0x61, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0xad, 0x02, 0x0a,
	0x03, 0x4d, 0x73, 0x67, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x69, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08,
	0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x55, 0x73, 0x65, 0x72,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x72, 0x6f, 0x6d,
	0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x70, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x02, 0x6f, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6e, 0x6f, 0x77, 0x49, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6e, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x62, 0x65, 0x6c, 0x6f, 0x6e, 0x67, 0x32, 0x9c, 0x03, 0x0a,
	0x0c, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x40, 0x0a,
	0x10, 0x50, 0x75, 0x73, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x4d, 0x73,
	0x67, 0x12, 0x14, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66,
	0x6f, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x42, 0x0a, 0x11, 0x50, 0x75, 0x73, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x4d, 0x73, 0x67, 0x12, 0x15, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x12, 0x46, 0x0a, 0x13, 0x50, 0x75, 0x73, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e,
	0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x12, 0x17, 0x2e, 0x50, 0x75, 0x73,
	0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x48, 0x0a, 0x14, 0x50,
	0x75, 0x73, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65,
	0x4d, 0x73, 0x67, 0x12, 0x18, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64,
	0x4f, 0x66, 0x66, 0x6c, 0x69, 0x6e, 0x65, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x38, 0x0a, 0x0c, 0x50, 0x75, 0x73, 0x68, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x4d, 0x73, 0x67, 0x12, 0x10, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x4d, 0x73, 0x67, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x12,
	0x3a, 0x0a, 0x0d, 0x50, 0x75, 0x73, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67,
	0x12, 0x11, 0x2e, 0x50, 0x75, 0x73, 0x68, 0x46, 0x72, 0x69, 0x65, 0x6e, 0x64, 0x4d, 0x73, 0x67,
	0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x0a, 0x5a, 0x08, 0x2e,
	0x2f, 0x3b, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_connect_proto_rawDescOnce sync.Once
	file_connect_proto_rawDescData = file_connect_proto_rawDesc
)

func file_connect_proto_rawDescGZIP() []byte {
	file_connect_proto_rawDescOnce.Do(func() {
		file_connect_proto_rawDescData = protoimpl.X.CompressGZIP(file_connect_proto_rawDescData)
	})
	return file_connect_proto_rawDescData
}

var file_connect_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_connect_proto_goTypes = []interface{}{
	(*KafkaMsgInfo)(nil),                // 0: kafkaMsgInfo
	(*PushGroupInfoMsgReq)(nil),         // 1: PushGroupInfoMsgReq
	(*PushGroupCountMsgReq)(nil),        // 2: PushGroupCountMsgReq
	(*PushFriendOnlineMsgReq)(nil),      // 3: PushFriendOnlineMsgReq
	(*PushFriendOfflineMsgReq)(nil),     // 4: PushFriendOfflineMsgReq
	(*PushGroupMsgReq)(nil),             // 5: PushGroupMsgReq
	(*PushFriendMsgReq)(nil),            // 6: PushFriendMsgReq
	(*KafkaMsgInfo_Header)(nil),         // 7: kafkaMsgInfo.Header
	(*PushGroupInfoMsgReq_Msg)(nil),     // 8: PushGroupInfoMsgReq.Msg
	(*PushGroupCountMsgReq_Msg)(nil),    // 9: PushGroupCountMsgReq.Msg
	(*PushFriendOnlineMsgReq_Msg)(nil),  // 10: PushFriendOnlineMsgReq.Msg
	(*PushFriendOfflineMsgReq_Msg)(nil), // 11: PushFriendOfflineMsgReq.Msg
	(*PushGroupMsgReq_Msg)(nil),         // 12: PushGroupMsgReq.Msg
	(*PushFriendMsgReq_Msg)(nil),        // 13: PushFriendMsgReq.Msg
	(*User)(nil),                        // 14: User
	(*emptypb.Empty)(nil),               // 15: google.protobuf.Empty
}
var file_connect_proto_depIdxs = []int32{
	7,  // 0: kafkaMsgInfo.headers:type_name -> kafkaMsgInfo.Header
	8,  // 1: PushGroupInfoMsgReq.msg:type_name -> PushGroupInfoMsgReq.Msg
	0,  // 2: PushGroupInfoMsgReq.kafkaInfo:type_name -> kafkaMsgInfo
	9,  // 3: PushGroupCountMsgReq.msg:type_name -> PushGroupCountMsgReq.Msg
	0,  // 4: PushGroupCountMsgReq.kafkaInfo:type_name -> kafkaMsgInfo
	10, // 5: PushFriendOnlineMsgReq.msg:type_name -> PushFriendOnlineMsgReq.Msg
	0,  // 6: PushFriendOnlineMsgReq.kafkaInfo:type_name -> kafkaMsgInfo
	11, // 7: PushFriendOfflineMsgReq.msg:type_name -> PushFriendOfflineMsgReq.Msg
	0,  // 8: PushFriendOfflineMsgReq.kafkaInfo:type_name -> kafkaMsgInfo
	12, // 9: PushGroupMsgReq.msg:type_name -> PushGroupMsgReq.Msg
	0,  // 10: PushGroupMsgReq.kafkaInfo:type_name -> kafkaMsgInfo
	13, // 11: PushFriendMsgReq.msg:type_name -> PushFriendMsgReq.Msg
	0,  // 12: PushFriendMsgReq.kafkaInfo:type_name -> kafkaMsgInfo
	14, // 13: PushGroupInfoMsgReq.Msg.userArr:type_name -> User
	1,  // 14: ConnectLayer.PushGroupInfoMsg:input_type -> PushGroupInfoMsgReq
	2,  // 15: ConnectLayer.PushGroupCountMsg:input_type -> PushGroupCountMsgReq
	3,  // 16: ConnectLayer.PushFriendOnlineMsg:input_type -> PushFriendOnlineMsgReq
	4,  // 17: ConnectLayer.PushFriendOfflineMsg:input_type -> PushFriendOfflineMsgReq
	5,  // 18: ConnectLayer.PushGroupMsg:input_type -> PushGroupMsgReq
	6,  // 19: ConnectLayer.PushFriendMsg:input_type -> PushFriendMsgReq
	15, // 20: ConnectLayer.PushGroupInfoMsg:output_type -> google.protobuf.Empty
	15, // 21: ConnectLayer.PushGroupCountMsg:output_type -> google.protobuf.Empty
	15, // 22: ConnectLayer.PushFriendOnlineMsg:output_type -> google.protobuf.Empty
	15, // 23: ConnectLayer.PushFriendOfflineMsg:output_type -> google.protobuf.Empty
	15, // 24: ConnectLayer.PushGroupMsg:output_type -> google.protobuf.Empty
	15, // 25: ConnectLayer.PushFriendMsg:output_type -> google.protobuf.Empty
	20, // [20:26] is the sub-list for method output_type
	14, // [14:20] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_connect_proto_init() }
func file_connect_proto_init() {
	if File_connect_proto != nil {
		return
	}
	file_logic_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_connect_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KafkaMsgInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushGroupInfoMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushGroupCountMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushFriendOnlineMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushFriendOfflineMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushGroupMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushFriendMsgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KafkaMsgInfo_Header); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushGroupInfoMsgReq_Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushGroupCountMsgReq_Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushFriendOnlineMsgReq_Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushFriendOfflineMsgReq_Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushGroupMsgReq_Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_connect_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PushFriendMsgReq_Msg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_connect_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_connect_proto_goTypes,
		DependencyIndexes: file_connect_proto_depIdxs,
		MessageInfos:      file_connect_proto_msgTypes,
	}.Build()
	File_connect_proto = out.File
	file_connect_proto_rawDesc = nil
	file_connect_proto_goTypes = nil
	file_connect_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// ConnectLayerClient is the client API for ConnectLayer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ConnectLayerClient interface {
	PushGroupInfoMsg(ctx context.Context, in *PushGroupInfoMsgReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	PushGroupCountMsg(ctx context.Context, in *PushGroupCountMsgReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	PushFriendOnlineMsg(ctx context.Context, in *PushFriendOnlineMsgReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	PushFriendOfflineMsg(ctx context.Context, in *PushFriendOfflineMsgReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	PushGroupMsg(ctx context.Context, in *PushGroupMsgReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	PushFriendMsg(ctx context.Context, in *PushFriendMsgReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
}

type connectLayerClient struct {
	cc grpc.ClientConnInterface
}

func NewConnectLayerClient(cc grpc.ClientConnInterface) ConnectLayerClient {
	return &connectLayerClient{cc}
}

func (c *connectLayerClient) PushGroupInfoMsg(ctx context.Context, in *PushGroupInfoMsgReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ConnectLayer/PushGroupInfoMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectLayerClient) PushGroupCountMsg(ctx context.Context, in *PushGroupCountMsgReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ConnectLayer/PushGroupCountMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectLayerClient) PushFriendOnlineMsg(ctx context.Context, in *PushFriendOnlineMsgReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ConnectLayer/PushFriendOnlineMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectLayerClient) PushFriendOfflineMsg(ctx context.Context, in *PushFriendOfflineMsgReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ConnectLayer/PushFriendOfflineMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectLayerClient) PushGroupMsg(ctx context.Context, in *PushGroupMsgReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ConnectLayer/PushGroupMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *connectLayerClient) PushFriendMsg(ctx context.Context, in *PushFriendMsgReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/ConnectLayer/PushFriendMsg", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ConnectLayerServer is the server API for ConnectLayer service.
type ConnectLayerServer interface {
	PushGroupInfoMsg(context.Context, *PushGroupInfoMsgReq) (*emptypb.Empty, error)
	PushGroupCountMsg(context.Context, *PushGroupCountMsgReq) (*emptypb.Empty, error)
	PushFriendOnlineMsg(context.Context, *PushFriendOnlineMsgReq) (*emptypb.Empty, error)
	PushFriendOfflineMsg(context.Context, *PushFriendOfflineMsgReq) (*emptypb.Empty, error)
	PushGroupMsg(context.Context, *PushGroupMsgReq) (*emptypb.Empty, error)
	PushFriendMsg(context.Context, *PushFriendMsgReq) (*emptypb.Empty, error)
}

// UnimplementedConnectLayerServer can be embedded to have forward compatible implementations.
type UnimplementedConnectLayerServer struct {
}

func (*UnimplementedConnectLayerServer) PushGroupInfoMsg(context.Context, *PushGroupInfoMsgReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushGroupInfoMsg not implemented")
}
func (*UnimplementedConnectLayerServer) PushGroupCountMsg(context.Context, *PushGroupCountMsgReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushGroupCountMsg not implemented")
}
func (*UnimplementedConnectLayerServer) PushFriendOnlineMsg(context.Context, *PushFriendOnlineMsgReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushFriendOnlineMsg not implemented")
}
func (*UnimplementedConnectLayerServer) PushFriendOfflineMsg(context.Context, *PushFriendOfflineMsgReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushFriendOfflineMsg not implemented")
}
func (*UnimplementedConnectLayerServer) PushGroupMsg(context.Context, *PushGroupMsgReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushGroupMsg not implemented")
}
func (*UnimplementedConnectLayerServer) PushFriendMsg(context.Context, *PushFriendMsgReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushFriendMsg not implemented")
}

func RegisterConnectLayerServer(s *grpc.Server, srv ConnectLayerServer) {
	s.RegisterService(&_ConnectLayer_serviceDesc, srv)
}

func _ConnectLayer_PushGroupInfoMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushGroupInfoMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectLayerServer).PushGroupInfoMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ConnectLayer/PushGroupInfoMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectLayerServer).PushGroupInfoMsg(ctx, req.(*PushGroupInfoMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConnectLayer_PushGroupCountMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushGroupCountMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectLayerServer).PushGroupCountMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ConnectLayer/PushGroupCountMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectLayerServer).PushGroupCountMsg(ctx, req.(*PushGroupCountMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConnectLayer_PushFriendOnlineMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushFriendOnlineMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectLayerServer).PushFriendOnlineMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ConnectLayer/PushFriendOnlineMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectLayerServer).PushFriendOnlineMsg(ctx, req.(*PushFriendOnlineMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConnectLayer_PushFriendOfflineMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushFriendOfflineMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectLayerServer).PushFriendOfflineMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ConnectLayer/PushFriendOfflineMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectLayerServer).PushFriendOfflineMsg(ctx, req.(*PushFriendOfflineMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConnectLayer_PushGroupMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushGroupMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectLayerServer).PushGroupMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ConnectLayer/PushGroupMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectLayerServer).PushGroupMsg(ctx, req.(*PushGroupMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _ConnectLayer_PushFriendMsg_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushFriendMsgReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ConnectLayerServer).PushFriendMsg(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ConnectLayer/PushFriendMsg",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ConnectLayerServer).PushFriendMsg(ctx, req.(*PushFriendMsgReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _ConnectLayer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ConnectLayer",
	HandlerType: (*ConnectLayerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PushGroupInfoMsg",
			Handler:    _ConnectLayer_PushGroupInfoMsg_Handler,
		},
		{
			MethodName: "PushGroupCountMsg",
			Handler:    _ConnectLayer_PushGroupCountMsg_Handler,
		},
		{
			MethodName: "PushFriendOnlineMsg",
			Handler:    _ConnectLayer_PushFriendOnlineMsg_Handler,
		},
		{
			MethodName: "PushFriendOfflineMsg",
			Handler:    _ConnectLayer_PushFriendOfflineMsg_Handler,
		},
		{
			MethodName: "PushGroupMsg",
			Handler:    _ConnectLayer_PushGroupMsg_Handler,
		},
		{
			MethodName: "PushFriendMsg",
			Handler:    _ConnectLayer_PushFriendMsg_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "connect.proto",
}
